{"version":3,"sources":["components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js","components/UI/Input/Input.js"],"names":["module","exports","Input","Label","InputElement","Invalid","ValidationError","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validations","required","valid","touched","password","minLength","isSignup","loginHandler","event","_this","props","onLogin","preventDefault","switchHandler","setState","prevState","this","burgerBuilder","authRedirectPath","setAuthRedirectPath","controlName","updatedControls","updateObject","Object","D_React_React_burger_builder_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","_this2","inputElement","inp","push","id","shouldValidate","isDisabled","every","i","error","message","authRedirect","isAuth","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_13__","to","element","className","classes","onSubmit","map","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_8__","key","changed","inputChangeHandler","valueType","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_9__","btnType","disabled","clicked","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_12__","Component","connect","token","auth","userId","ingredients","building","dispatch","isSginup","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","input","validClass","validationError","assign","join","onChange","options","o","displayValue"],"mappings":"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","file":"static/js/4.e597be9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2brp_\",\"Label\":\"Input_Label__19ghY\",\"InputElement\":\"Input_InputElement__2psjG\",\"Invalid\":\"Input_Invalid__1mFC_\",\"ValidationError\":\"Input_ValidationError__20Te8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2x5ka\"};","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../store/actions/auth';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { setAuthRedirectPath } from '../../store/actions/auth';\r\nimport { updateObject, checkValidity } from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validations: {\r\n                    required: true,\r\n                    email: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validations: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.burgerBuilder && this.props.authRedirectPath !== '/checkout') {\r\n            this.props.setAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n\r\n    inputChangeHandler(event, controlName) {\r\n        const updatedControls = updateObject(this.state.controls,\r\n            {\r\n                [controlName]:\r\n                    updateObject(this.state.controls[controlName], {\r\n                        value: event.target.value,\r\n                        valid: checkValidity(event.target.value, this.state.controls[controlName].validations),\r\n                        touched: true\r\n                    })\r\n            })\r\n        this.setState({\r\n            controls: updatedControls\r\n        })\r\n    }\r\n\r\n    loginHandler = (event) => {\r\n        this.props.onLogin(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n        event.preventDefault();\r\n    }\r\n\r\n    switchHandler = () => {\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let inputElement = [];\r\n        for (let inp in this.state.controls) {\r\n            inputElement.push(\r\n                {\r\n                    id: inp,\r\n                    elementType: this.state.controls[inp].elementType,\r\n                    elementConfig: this.state.controls[inp].elementConfig,\r\n                    value: this.state.controls[inp].value,\r\n                    valid: this.state.controls[inp].valid,\r\n                    shouldValidate: this.state.controls[inp].validations,\r\n                    touched: this.state.controls[inp].touched\r\n                }\r\n            )\r\n        }\r\n        let isDisabled = inputElement.every(i => i.valid);\r\n        let error = null;\r\n        if (this.props.error) {\r\n            error = this.props.error.message;\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuth) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n        let element = (\r\n            <div className={classes.Auth}>\r\n                {error}\r\n                {authRedirect}\r\n                <form onSubmit={this.loginHandler}>\r\n                    {\r\n                        inputElement.map(inp => {\r\n                            return <Input\r\n                                elementType={inp.elementType}\r\n                                value={inp.value}\r\n                                elementConfig={inp.elementConfig}\r\n                                key={inp.id}\r\n                                changed={(event) => { this.inputChangeHandler(event, inp.id) }}\r\n                                valid={!inp.valid}\r\n                                shouldValidate={inp.shouldValidate}\r\n                                touched={inp.touched}\r\n                                valueType={inp.id}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                    <Button btnType='Success' disabled={!isDisabled}>{!this.state.isSignup ? 'LOGIN' : 'Sign UP'}</Button>\r\n                </form>\r\n                <Button btnType='Danger' clicked={this.switchHandler}>SWITCH TO {this.state.isSignup ? 'Login' : 'Sign UP'}</Button>\r\n            </div>\r\n        )\r\n        if (this.props.loading) {\r\n            element = <Spinner />;\r\n        }\r\n        return element\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.auth.token,\r\n        userId: state.auth.userId,\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuth: state.auth.token !== null,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        burgerBuilder: state.ingredients.building\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogin: (email, password, isSginup) => dispatch(auth(email, password, isSginup)),\r\n        setAuthRedirectPath: () => dispatch(setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const validClass = [classes.InputElement];\r\n    let validationError = null;\r\n    if (props.valid && props.shouldValidate && props.touched) {\r\n        validClass.push(classes.Invalid);\r\n        validationError = <p className={classes.ValidationError}>Please enter a valid {props.valueType}</p>;\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input className={validClass.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea className={validClass.join(' ')} {...props.elementConfig} value={props.value} onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select className={validClass.join(' ')} {...props.elementConfig} onChange={props.changed} value={props.value}>\r\n                    <option value=\"\" key='default' >Select Method</option>\r\n                    {\r\n                        props.elementConfig.options.map(o => {\r\n                            return <option value={o.value} key={o.value} >{o.displayValue}</option>\r\n                        })\r\n\r\n                    }\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input className={validClass.join(' ')} {...props.elementConfig} value={props.value} />;\r\n            return inputElement;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            {/* <label className={classes.Label}>{props.label}: </label> */}\r\n            {inputElement}\r\n            {validationError}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;"],"sourceRoot":""}